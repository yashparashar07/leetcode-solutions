//Given a string s, partition the string into one or more substrings such that the characters in each substring are unique. 
//That is, no letter appears in a single substring more than once.

//Return the minimum number of substrings in such a partition.

//Note that each character should belong to exactly one substring in a partition.


class Solution {
public:
    int partitionString(string s) {
        if(s == "") return 0;
        int i = 0 ; int ans = 1 ; int flag = 0;

        while(i < s.size()){
            int val = s[i] - 'a';
            if(flag & (1<<val)){
                flag = 0;
                ans++;
            }
            flag = flag | (1 << val);
            i++;
        }

        return ans;
    }
};
